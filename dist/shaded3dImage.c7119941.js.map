{"version":3,"sources":["assets/js/shaded3dImage.js"],"names":["loader","THREE","TextureLoader","texture1","load","images","logo","texture2","lerp","start","end","t","Shaded","container","document","querySelector","inner","links","querySelectorAll","targetX","targetY","scene","Scene","perspective","sizes","Vector2","offset","uniforms","uTexture","value","uAlpha","uOffset","transparent","map","link","i","addEventListener","checkHovered","setupCamera","followMouseMove","createMesh","render","width","window","innerWidth","height","innerHeight","aspectRatio","pixelRatio","devicePixelRatio","hovered","onResize","bind","fov","Math","atan","viewport","PI","camera","PerspectiveCamera","position","set","renderer","WebGL1Renderer","antialias","alpha","setSize","setPixelRatio","appendChild","domElement","geometry","CircleGeometry","material","ShaderMaterial","vertexShader","vertex","fragmentShader","fragment","opacity","mesh","Mesh","scale","x","y","add","e","clientX","clientY","aspect","updateProjectionMatrix","requestAnimationFrame"],"mappings":";;AAAA;AACA;AAEA;AACA;AAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFhD,IAAMA,MAAM,GAAG,IAAIC,KAAK,CAACC,aAAa,EAAE;AAMxC,IAAMC,QAAQ,GAAGH,MAAM,CAACI,IAAI,CAACC,eAAM,CAACC,IAAI,CAAC;AACzC,IAAMC,QAAQ,GAAGP,MAAM,CAACI,IAAI,CAACC,eAAM,CAACC,IAAI,CAAC;AAEzC,SAASE,IAAI,CAACC,KAAK,EAAEC,GAAG,EAAEC,CAAC,EAAE;EACzB,OAAOF,KAAK,IAAI,CAAC,GAAGE,CAAC,CAAC,GAAGD,GAAG,GAAGC,CAAC;AACpC;AAAC,IAEKC,MAAM;EACR,kBAAc;IAAA;IAAA;IACV,IAAI,CAACC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IACnD,IAAI,CAACC,KAAK,GAAGF,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;IAClD,IAAI,CAACE,KAAK,sBAAOH,QAAQ,CAACI,gBAAgB,CAAC,SAAS,CAAC,CAAC;IACtD,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,KAAK,GAAG,IAAIpB,KAAK,CAACqB,KAAK,EAAE;IAC9B,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,KAAK,GAAG,IAAIvB,KAAK,CAACwB,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC;IACnC,IAAI,CAACC,MAAM,GAAG,IAAIzB,KAAK,CAACwB,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC;IACpC,IAAI,CAACE,QAAQ,GAAG;MACZC,QAAQ,EAAE;QAAEC,KAAK,EAAE1B;MAAS,CAAC;MAC7B2B,MAAM,EAAE;QAAED,KAAK,EAAE;MAAI,CAAC;MACtBE,OAAO,EAAE;QAAEF,KAAK,EAAE,IAAI5B,KAAK,CAACwB,OAAO,CAAC,GAAG,EAAE,GAAG;MAAE,CAAC;MAC/CO,WAAW,EAAE;IACjB,CAAC;IACD,IAAI,CAACf,KAAK,CAACgB,GAAG,CAAC,UAACC,IAAI,EAACC,CAAC,EAAK;MACvBD,IAAI,CAACE,gBAAgB,CAAC,YAAY,EAAE,YAAK;QACrC,QAAOD,CAAC;UACJ,KAAK,CAAC;YACF,KAAI,CAACR,QAAQ,CAACC,QAAQ,CAACC,KAAK,GAAE1B,QAAQ;YACtC;UACJ,KAAK,CAAC;YACF,KAAI,CAACwB,QAAQ,CAACC,QAAQ,CAACC,KAAK,GAAEtB,QAAQ;YACtC;QAAM;MAElB,CAAC,CAAC;MACF2B,IAAI,CAACE,gBAAgB,CAAC,YAAY,EAAE,YAAM;QACtC,KAAI,CAACT,QAAQ,CAACG,MAAM,CAACD,KAAK,GAAGrB,IAAI,CAAC,KAAI,CAACmB,QAAQ,CAACG,MAAM,CAACD,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAACQ,YAAY,EAAE;IACnB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,MAAM,EAAE;EACjB;EAAC;IAAA;IAAA,KAED,eAAe;MACX,IAAIC,KAAK,GAAGC,MAAM,CAACC,UAAU;MAC7B,IAAIC,MAAM,GAAGF,MAAM,CAACG,WAAW;MAC/B,IAAIC,WAAW,GAAGL,KAAK,GAAGG,MAAM;MAChC,IAAIG,UAAU,GAAGL,MAAM,CAACM,gBAAgB;MACxC,OAAO;QACHP,KAAK,EAALA,KAAK;QAAEG,MAAM,EAANA,MAAM;QAAEE,WAAW,EAAXA,WAAW;QAAEC,UAAU,EAAVA;MAChC,CAAC;IACL;EAAC;IAAA;IAAA,OAID,wBAAe;MAAA;MACX,IAAI,CAAChC,KAAK,CAACoB,gBAAgB,CAAC,YAAY,EAAE,YAAM;QAC5C,MAAI,CAACc,OAAO,GAAG,IAAI;MACvB,CAAC,CAAC;MACF,IAAI,CAAClC,KAAK,CAACoB,gBAAgB,CAAC,YAAY,EAAE,YAAM;QAC5C,MAAI,CAACc,OAAO,GAAG,KAAK;QACpB,MAAI,CAACvB,QAAQ,CAACC,QAAQ,GAAG;UAAEC,KAAK,EAAEtB;QAAS,CAAC;MAChD,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OAGD,uBAAc;MACVoC,MAAM,CAACP,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACe,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC3D,IAAIC,GAAG,GACF,GAAG,IAAI,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACX,MAAM,GAAG,CAAC,GAAG,IAAI,CAACtB,WAAW,CAAC,CAAC,GAAI+B,IAAI,CAACG,EAAE;MAElF,IAAI,CAACC,MAAM,GAAG,IAAIzD,KAAK,CAAC0D,iBAAiB,CAACN,GAAG,EAAE,IAAI,CAACG,QAAQ,CAACT,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;MACpF,IAAI,CAACW,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACtC,WAAW,CAAC;;MAEhD;MACA,IAAI,CAACuC,QAAQ,GAAG,IAAI7D,KAAK,CAAC8D,cAAc,CAAE;QACtCC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE;MACX,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,OAAO,CAAC,IAAI,CAACV,QAAQ,CAACd,KAAK,EAAE,IAAI,CAACc,QAAQ,CAACX,MAAM,CAAC;MAChE,IAAI,CAACiB,QAAQ,CAACK,aAAa,CAAC,IAAI,CAACX,QAAQ,CAACR,UAAU,CAAC;MACrD,IAAI,CAACnC,SAAS,CAACuD,WAAW,CAAC,IAAI,CAACN,QAAQ,CAACO,UAAU,CAAC;IACxD;EAAC;IAAA;IAAA,OAED,sBAAa;MACT,IAAI,CAACC,QAAQ,GAAG,IAAIrE,KAAK,CAACsE,cAAc,CAAE,GAAG,EAAE,CAAC,CAAE;MAClD,IAAI,CAACC,QAAQ,GAAG,IAAIvE,KAAK,CAACwE,cAAc,CAAC;QACrC9C,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvB+C,YAAY,EAAEC,eAAM;QACpBC,cAAc,EAAEC,iBAAQ;QACxB7C,WAAW,EAAE,IAAI;QACjB8C,OAAO,EAAE;MAGb,CAAC,CAAC;MACF,IAAI,CAACC,IAAI,GAAG,IAAI9E,KAAK,CAAC+E,IAAI,CAAC,IAAI,CAACV,QAAQ,EAAE,IAAI,CAACE,QAAQ,CAAC;MACxD,IAAI,CAAChD,KAAK,CAACqC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MAC3B,IAAI,CAACkB,IAAI,CAACE,KAAK,CAACpB,GAAG,CAAC,IAAI,CAACrC,KAAK,CAAC0D,CAAC,EAAE,IAAI,CAAC1D,KAAK,CAAC2D,CAAC,EAAE,CAAC,CAAC;MAClD,IAAI,CAACJ,IAAI,CAACnB,QAAQ,CAACC,GAAG,CAAC,IAAI,CAACnC,MAAM,CAACwD,CAAC,EAAE,IAAI,CAACxD,MAAM,CAACyD,CAAC,EAAE,CAAC,CAAC;MACvD,IAAI,CAAC9D,KAAK,CAAC+D,GAAG,CAAC,IAAI,CAACL,IAAI,CAAC;IAC7B;EAAC;IAAA;IAAA,OAED,2BAAkB;MAAA;MACdpC,MAAM,CAACP,gBAAgB,CAAC,WAAW,EAAE,UAACiD,CAAC,EAAK;QACxC,MAAI,CAAClE,OAAO,GAAGkE,CAAC,CAACC,OAAO;QACxB,MAAI,CAAClE,OAAO,GAAGiE,CAAC,CAACE,OAAO;MAC5B,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OAED,oBAAW;MACP,IAAI,CAAC7B,MAAM,CAAC8B,MAAM,GAAG,IAAI,CAAChC,QAAQ,CAACT,WAAW;MAC9C,IAAI,CAACW,MAAM,CAACL,GAAG,GAAI,GAAG,IAAI,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACX,MAAM,GAAG,CAAC,GAAG,IAAI,CAACtB,WAAW,CAAC,CAAC,GAAI+B,IAAI,CAACG,EAAE;MAChG,IAAI,CAACK,QAAQ,CAACI,OAAO,CAAC,IAAI,CAACV,QAAQ,CAACd,KAAK,EAAE,IAAI,CAACc,QAAQ,CAACX,MAAM,CAAC;MAChE,IAAI,CAACa,MAAM,CAAC+B,sBAAsB,EAAE;IACxC;EAAC;IAAA;IAAA,OAKD,kBAAS;MACL,IAAI,CAAC/D,MAAM,CAACwD,CAAC,GAAG1E,IAAI,CAAC,IAAI,CAACkB,MAAM,CAACwD,CAAC,EAAE,IAAI,CAAC/D,OAAO,EAAE,GAAG,CAAC;MACtD,IAAI,CAACO,MAAM,CAACyD,CAAC,GAAG3E,IAAI,CAAC,IAAI,CAACkB,MAAM,CAACyD,CAAC,EAAE,IAAI,CAAC/D,OAAO,EAAE,GAAG,CAAC;MACtD,IAAI,CAACO,QAAQ,CAACI,OAAO,CAACF,KAAK,CAACgC,GAAG,CAC3B,CAAC,IAAI,CAAC1C,OAAO,GAAC,IAAI,CAACO,MAAM,CAACwD,CAAC,IAAI,MAAM,EACrC,EAAE,IAAI,CAAC9D,OAAO,GAAC,IAAI,CAACM,MAAM,CAACyD,CAAC,CAAC,GAAC,MAAM,CACvC;MACD,IAAI,CAACJ,IAAI,CAACnB,QAAQ,CAACC,GAAG,CAClB,IAAI,CAACnC,MAAM,CAACwD,CAAC,GAAGvC,MAAM,CAACC,UAAU,GAAG,CAAC,EACrC,CAAC,IAAI,CAAClB,MAAM,CAACyD,CAAC,GAAGxC,MAAM,CAACG,WAAW,GAAG,CAAC,CAC1C;MACD,IAAI,CAACI,OAAO,GACL,IAAI,CAACvB,QAAQ,CAACG,MAAM,CAACD,KAAK,GAACrB,IAAI,CAC9B,IAAI,CAACmB,QAAQ,CAACG,MAAM,CAACD,KAAK,EAC1B,GAAG,EACH,GAAG,CACN,GACE,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACD,KAAK,GAACrB,IAAI,CAC9B,IAAI,CAACmB,QAAQ,CAACG,MAAM,CAACD,KAAK,EAC1B,GAAG,EACH,GAAG,CACL;MACN,IAAI,CAACiC,QAAQ,CAACrB,MAAM,CAAC,IAAI,CAACpB,KAAK,EAAE,IAAI,CAACqC,MAAM,CAAC;MAC7Cf,MAAM,CAAC+C,qBAAqB,CAAC,IAAI,CAACjD,MAAM,CAACW,IAAI,CAAC,IAAI,CAAC,CAAC;IACxD;EAAC;EAAA;AAAA;AAOL,IAAIxC,MAAM,EAAE","file":"shaded3dImage.c7119941.js","sourceRoot":"..","sourcesContent":["import * as THREE from \"three\";\r\nimport images from './images';\r\nconst loader = new THREE.TextureLoader();\r\nimport vertex from '../shaders/vertex.glsl';\r\nimport fragment from '../shaders/fragment.glsl';\r\n\r\n\r\n\r\nconst texture1 = loader.load(images.logo);\r\nconst texture2 = loader.load(images.logo);\r\n\r\nfunction lerp(start, end, t) {\r\n    return start * (1 - t) + end * t;\r\n}\r\n\r\nclass Shaded {\r\n    constructor() {\r\n        this.container = document.querySelector(\".landing\");\r\n        this.inner = document.querySelector(\".introTitle\");\r\n        this.links = [...document.querySelectorAll(\"#shaded\")];\r\n        this.targetX = 0;\r\n        this.targetY = 0;\r\n        this.scene = new THREE.Scene();\r\n        this.perspective = 1000;\r\n        this.sizes = new THREE.Vector2(0,0);\r\n        this.offset = new THREE.Vector2(0,0);\r\n        this.uniforms = {\r\n            uTexture: { value: texture1 },\r\n            uAlpha: { value: 0.0 },\r\n            uOffset: { value: new THREE.Vector2(0.0, 0.0) },\r\n            transparent: true,\r\n        };\r\n        this.links.map((link,i) => {\r\n            link.addEventListener(\"mouseenter\", ()=> {\r\n                switch(i) {\r\n                    case 0:\r\n                        this.uniforms.uTexture.value= texture1;\r\n                        break;\r\n                    case 1:\r\n                        this.uniforms.uTexture.value= texture2;\r\n                        break;\r\n                }\r\n            });\r\n            link.addEventListener(\"mouseleave\", () => {\r\n                this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 0.0, 0.1);\r\n            });\r\n        });\r\n        this.checkHovered();\r\n        this.setupCamera();\r\n        this.followMouseMove();\r\n        this.createMesh();\r\n        this.render();\r\n    }\r\n\r\n    get viewport() {\r\n        let width = window.innerWidth;\r\n        let height = window.innerHeight;\r\n        let aspectRatio = width / height;\r\n        let pixelRatio = window.devicePixelRatio;\r\n        return {\r\n            width, height, aspectRatio, pixelRatio,\r\n        };\r\n    }\r\n\r\n    \r\n\r\n    checkHovered() {\r\n        this.inner.addEventListener(\"mouseenter\", () => {\r\n            this.hovered = true;\r\n        });\r\n        this.inner.addEventListener(\"mouseleave\", () => {\r\n            this.hovered = false;\r\n            this.uniforms.uTexture = { value: texture2 };\r\n        });\r\n    }\r\n\r\n\r\n    setupCamera() {\r\n        window.addEventListener('resize', this.onResize.bind(this));\r\n        let fov =\r\n            (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\r\n        \r\n        this.camera = new THREE.PerspectiveCamera(fov, this.viewport.aspectRatio, 0.1, 1000);\r\n        this.camera.position.set(0, 0, this.perspective);\r\n\r\n        // Renderer\r\n        this.renderer = new THREE.WebGL1Renderer ({\r\n            antialias: true,\r\n            alpha: true,\r\n        });\r\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\r\n        this.renderer.setPixelRatio(this.viewport.pixelRatio);\r\n        this.container.appendChild(this.renderer.domElement);\r\n    }\r\n\r\n    createMesh() {\r\n        this.geometry = new THREE.CircleGeometry( 0.1, 5 )\r\n        this.material = new THREE.ShaderMaterial({\r\n            uniforms: this.uniforms,\r\n            vertexShader: vertex,\r\n            fragmentShader: fragment,\r\n            transparent: true,\r\n            opacity: 0.5,\r\n            \r\n           \r\n        });\r\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n        this.sizes.set(370, 470, 1);\r\n        this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\r\n        this.mesh.position.set(this.offset.x, this.offset.y, 0);\r\n        this.scene.add(this.mesh);\r\n    }\r\n\r\n    followMouseMove() {\r\n        window.addEventListener('mousemove', (e) => {\r\n            this.targetX = e.clientX;\r\n            this.targetY = e.clientY;\r\n        });\r\n    }\r\n\r\n    onResize() {\r\n        this.camera.aspect = this.viewport.aspectRatio;\r\n        this.camera.fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\r\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    \r\n   \r\n\r\n    render() {\r\n        this.offset.x = lerp(this.offset.x, this.targetX, 0.1);\r\n        this.offset.y = lerp(this.offset.y, this.targetY, 0.1);\r\n        this.uniforms.uOffset.value.set(\r\n            (this.targetX-this.offset.x) * 0.0003, \r\n            -(this.targetY-this.offset.y)*0.0003\r\n        );\r\n        this.mesh.position.set(\r\n            this.offset.x - window.innerWidth / 2,\r\n            -this.offset.y + window.innerHeight / 2\r\n        );\r\n        this.hovered \r\n            ? (this.uniforms.uAlpha.value=lerp(\r\n                this.uniforms.uAlpha.value,\r\n                1.0,\r\n                0.1\r\n            )) \r\n            : (this.uniforms.uAlpha.value=lerp(\r\n                this.uniforms.uAlpha.value,\r\n                0.0,\r\n                0.1\r\n            ));\r\n        this.renderer.render(this.scene, this.camera);\r\n        window.requestAnimationFrame(this.render.bind(this));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nnew Shaded();"]}